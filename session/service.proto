syntax = "proto3";
package session;
option go_package = "github.com/nspcc-dev/neofs-proto/session";

import "session/types.proto";
import "service/meta.proto";
import "service/verify.proto";
import "github.com/gogo/protobuf/gogoproto/gogo.proto";

option (gogoproto.stable_marshaler_all) = true;

service Session {
    rpc Create (stream CreateRequest) returns (stream CreateResponse);
}


message CreateRequest {
    oneof Message {
        session.Token Init = 1;
        session.Token Signed = 2;
    }
    service.RequestMetaHeader Meta           = 98 [(gogoproto.embed) = true, (gogoproto.nullable) = false];
    service.RequestVerificationHeader Verify = 99 [(gogoproto.embed) = true, (gogoproto.nullable) = false];
}

message CreateResponse {
    oneof Message {
        session.Token Unsigned = 1;
        session.Token Result = 2;
    }
}
