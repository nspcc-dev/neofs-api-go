syntax = "proto3";
package accounting;
option go_package = "github.com/nspcc-dev/neofs-api-go/accounting";
option csharp_namespace = "NeoFS.API.Accounting";

import "service/meta.proto";
import "service/verify.proto";
import "decimal/decimal.proto";
import "accounting/types.proto";
import "github.com/gogo/protobuf/gogoproto/gogo.proto";

option (gogoproto.stable_marshaler_all) = true;

// Accounting is a service that provides access for accounting balance
// information
service Accounting {
    // Balance returns current balance status of the NeoFS user
    rpc Balance(BalanceRequest) returns (BalanceResponse);
}

message BalanceRequest {
    // OwnerID is a wallet address
    bytes OwnerID                            = 1 [(gogoproto.customtype) = "OwnerID", (gogoproto.nullable) = false];
    // RequestMetaHeader contains information about request meta headers (should be embedded into message)
    service.RequestMetaHeader Meta           = 98 [(gogoproto.embed) = true, (gogoproto.nullable) = false];
    // RequestVerificationHeader is a set of signatures of every NeoFS Node that processed request (should be embedded into message)
    service.RequestVerificationHeader Verify = 99 [(gogoproto.embed) = true, (gogoproto.nullable) = false];
}

message BalanceResponse {
    // Balance contains current account balance state
    decimal.Decimal Balance       = 1;
    // LockAccounts contains information about locked funds. Locked funds appear
    // when user pays for storage or withdraw assets.
    repeated Account LockAccounts = 2;
}
